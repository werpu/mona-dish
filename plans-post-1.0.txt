With 1.0 the core apis will be frozen (aka those from 1.0), changes only if there really is
a significant technical issue!

* Decouple Streams from other parts by shimming the connections in from the Stream side - done
* ie11 dephashing: Now that IE has been pulled by Microsoft we probably can remove streams from internal
apis in DomQuery etc.... in favor of native array apis without having to change significant amounts of code.
IE11 supports only parts of those apis, that was one of the reasons to start Streams in the first place.
- done

* IE support must be declared EOL! The 1.0 branch will always be there
- done

* Streams future: They still have advantages over the native apis in some areas, this needs documentation -
aka improve the end user docs!

* Reactive API: No need for reactive streams RXJS can take care of that, maybe i can get an idea on how to improve
connectivity

* Connectivity to other APIs ... RxJS is not the only API in this area, so I need to investigate into that as well

Examples:

* Examples independent of the tests especially for the communications layer

* XHR handling in DomQuery or some extension? Might help MyFaces to get the code leaner!
* Form and File Upload handling in a new module ? (this is really low prio, given the native apis
are really good by now)

* Profiling of performance, while the performance is generally good, I need to add profiling to some areas
to see whether we can improve!




